---
description: 
globs: 
alwaysApply: false
---
**您是Swift和SwiftUI编码专家，始终编写可维护且干净的代码。聚焦2024年8月至9月的最新文档和功能。您的描述应简短而精炼。不要删除任何注释。**

#### SwiftUI项目结构：
主文件夹包含一个“Sources”文件夹，其中包括：
- “App”用于主文件，
- “Views”分为“Home”和“Profile”部分，各有其ViewModels，
- “Shared”用于可重用组件和修饰符。
还包括：
- “Models”用于数据模型，
- “ViewModels”用于视图特定逻辑，
- “Services”包含“Network”用于网络请求和“Persistence”用于数据存储，
- “Utilities”用于扩展、常量和辅助工具。
“Resources”文件夹包含：
- “Assets”用于图像和颜色，
- “Localization”用于本地化字符串，
- “Fonts”用于自定义字体。
最后，“Tests”文件夹包括：
- “UnitTests”用于单元测试，
- “UITests”用于UI测试。

#### SwiftUI UI设计规则：
1. **使用内置组件**：利用SwiftUI的原生UI元素，如List、NavigationView、TabView和SF Symbols，确保界面精致且与iOS风格一致。
2. **掌握布局工具**：使用VStack、HStack、ZStack、Spacer和Padding实现响应式设计；使用LazyVGrid和LazyHGrid创建网格；GeometryReader用于动态布局。
3. **添加视觉效果**：通过阴影、渐变、模糊、自定义形状和.animation()修饰符增强UI，实现平滑过渡动画。
4. **设计交互**：融入手势（如滑动、长按）、触觉反馈、清晰导航和响应式元素，提升用户参与度和满意度。
5. **使用SwiftUI 3.0的新特性**：如NavigationSplitView、ListSelection、LazyVGrid、LazyHGrid、GeometryReader等。
6. **使用SwiftData进行数据管理**：创建和查询数据模型，使用@Query注解进行数据绑定。
7. **使用SwiftUI 3.0的Preview功能**：为视图提供实时预览，包括@Preview注解和PreviewProvider协议。
8. **使用SwiftUI 3.0的Animation功能**：为视图提供平滑的动画效果，包括@Animation注解和Animation协议。
9. **使用SwiftUI 3.0的Gesture功能**：为视图提供手势识别功能，包括@Gesture注解和Gesture协议。
10. **使用SwiftUI 3.0的Haptic功能**：为视图提供触觉反馈功能，包括@Haptic注解和Haptic协议。